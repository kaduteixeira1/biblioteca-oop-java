@startuml Diagrama

class Biblioteca {
  - livros : List<Livro>
  - usuarios : List<Usuario>
  - emprestimos : List<Emprestimo>
  + Biblioteca()
  + adicionarLivro(livro : Livro) : void
  + adicionarUsuario(usuario : Usuario) : void
  + emprestarLivro(isbn : String, usuarioId : int) : boolean
  + devolverLivro(isbn : String, usuarioId : int) : boolean
  + buscarLivroPorIsbn(isbn : String) : Livro
  + buscarUsuarioPorId(id : int) : Usuario
  + listarLivros() : void
  + listarUsuarios() : void
  + listarEmprestimos() : void
  + removerUsuario(id : int) : boolean
  + removerLivro(isbn : String) : boolean
}

class Livro {
  - titulo : String
  - autor : String
  - isbn : String
  - disponivel : boolean
  + Livro(titulo : String, autor : String, isbn : String)
  + getTitulo() : String
  + getAutor() : String
  + getIsbn() : String
  + isDisponivel() : boolean
  + setDisponivel(disponivel : boolean) : void
  + toString() : String
}

class Usuario {
  - static contadorId : int
  - nome : String
  - id : int
  + Usuario(nome : String)
  + getNome() : String
  + getId() : int
  + getPrazoEmprestimoDias() : int
  + getTipo() : String
  + toString() : String
}

class UsuarioVip {
  + UsuarioVip(nome : String)
  + getPrazoEmprestimoDias() : int
  + getTipo() : String
}

class Emprestimo {
  - livro : Livro
  - usuario : Usuario
  - dataEmprestimo : LocalDateTime
  - dataDevolucao : LocalDateTime
  + Emprestimo(livro : Livro, usuario : Usuario, dataEmprestimo : LocalDateTime)
  + getLivro() : Livro
  + getUsuario() : Usuario
  + getDataEmprestimo() : LocalDateTime
  + getDataDevolucao() : LocalDateTime
  + devolver(dataDevolucao : LocalDateTime) : void
  + mostrarPrazoDevolucao() : void
  + toString() : String
}

Biblioteca --> Livro
Biblioteca --> Usuario
Biblioteca --> Emprestimo

Emprestimo --> Livro
Emprestimo --> Usuario

UsuarioVip --|> Usuario

@enduml
